{
  "plugin_type": "extractors",
  "name": "tap-csv",
  "namespace": "tap_csv",
  "variant": "meltanolabs",
  "label": "Comma Separated Values (CSV)",
  "docs": "https://hub.meltano.com/extractors/tap-csv/meltanolabs",
  "repo": "https://github.com/MeltanoLabs/tap-csv",
  "pip_url": "git+https://github.com/MeltanoLabs/tap-csv.git",
  "capabilities": [
    "discover",
    "catalog",
    "state"
  ],
  "settings_group_validation": [
    [
      "files"
    ],
    [
      "csv_files_definition"
    ]
  ],
  "settings": [
    {
      "name": "files",
      "kind": "array",
      "label": "Files",
      "description": "Array of objects with `entity`, `path`, `keys`, and `encoding` [Optioanl] keys:\n\n* `entity`: The entity name, used as the table name for the data loaded from that CSV.\n* `path`: Local path (relative to the project's root) to the file to be ingested. Note that this may be a directory, in which case all files in that directory and any of its subdirectories will be recursively processed\n* `keys`: The names of the columns that constitute the unique keys for that entity.\n* `encoding`: [Optional] The file encoding to use when reading the file (i.e. \"latin1\", \"UTF-8\"). Use this setting when you get a UnicodeDecodeError error.\n  Each input CSV file must be a traditionally-delimited CSV (comma separated columns, newlines indicate new rows, double quoted values).\n\nThe first row is the header defining the attribute name for that column and will result to a column of the same name in the database. It must have a valid format with no spaces or special characters (like for example `!` or `@`, etc).\n"
    },
    {
      "name": "csv_files_definition",
      "label": "CSV Files Definition",
      "documentation": "https://github.com/MeltanoLabs/tap-csv#settings",
      "description": "Project-relative path to JSON file holding array of objects with `entity`, `path`, `keys`, and `encoding` [Optional] keys, as ascribed under [Files](#files):\n\n```json\n[\n  {\n    \"entity\": \"<entity>\",\n    \"path\": \"<path>\",\n    \"keys\": [\"<key>\"],\n  },\n  // ...\n]\n```\n",
      "placeholder": "Ex. files-def.json"
    }
  ]
}