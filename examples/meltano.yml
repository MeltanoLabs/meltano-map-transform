version: 1
default_environment: dev
send_anonymous_usage_stats: false

plugins:
  extractors:
  - name: tap-csv
    variant: meltanolabs
    pip_url: git+https://github.com/MeltanoLabs/tap-csv.git
  - name: tap-2-csv
    inherit_from: tap-csv
  loaders:
  - name: target-sqlite
    variant: meltanolabs
    pip_url: git+https://github.com/MeltanoLabs/target-sqlite.git
    config:
      batch_size: 200
      database: output/$MELTANO_EXTRACTOR_NAMESPACE.db



##################################
#                                #
#       Mappers                  #
#                                #
##################################
  mappers:
  - name: meltano-map-transformer
    pip_url: ../.
    executable: meltano-map-transform
    settings:
    - name: stream_maps
      kind: object
    mappings:
    - name: hash_email
      config:
        stream_maps:
          customers:
            id: id
            email:      # drop the PII field from RECORD and SCHEMA messages
            email_domain: email.split('@')[-1]
            email_hash: md5(config['hash_seed'] + email)
            __else__: null
        stream_map_config:
          hash_seed: 01AWZh7A6DzGm6iJZZ2T
    - name: whitelist
      config:
        stream_maps:
          # Whitelist `id` and `description` fields, drop all others
          customers:
            id: id
            description: last_name
            __else__: __NULL__
            __alias__: customers_v2
    - name: add_timestamp
      config:
        stream_maps:
          customers:
            mapping_time: datetime.date.today()
            __alias__: customers_v3
    - name: add_str
      config:
        stream_maps:
          customers:
            client_id: "\"client_123\""
            id: int(id)
            __alias__: customers_v4
            hash_id: md5(str(id))
            __key_properties__: ["hash_id"]
    - name: lower
      config:
        stream_maps:
          customers:
            __alias__: customers_v5
            first_name: first_name.lower() # three different ways of accessing the variable
            last_name: record['last_name'].lower()
            email:  _['email'].upper()
            count_t: str(last_name.count("t")) # need to cast to str because it could be NULL!
            ip_address: __NULL__
    - name: find
      config:
        stream_maps:
          customers:
            __alias__: customers_v6
            first_name: "'found_book' if last_name == 'Book' else 'no_book'"
            id: id
            __else__: __NULL__
    - name: mask
      config:
        stream_maps:
          customers:
            __alias__: customers_v7
            last_name: "config[last_name] if last_name in config else 'no-mask-found'"
            first_name: first_name
            id: id
            __else__: __NULL__
        stream_map_config:
          Book: mask-1
          Tire: mask-2
          Dorian: mask-1
          Suddock: mask-1
          Daws: mask-3
          Maddison: mask-2
          Biernat: mask-4
          Wisden: mask-4
          Loyndon: Mask-2

environments:
- name: dev
  config:
    plugins:
      extractors:
      - name: tap-csv
        config:
          files:
          - entity: customers
            path: ../fixtures/customers.csv
            keys: [id]
      - name: tap-2-csv
        config:
          files:
          - entity: ext_customers
            path: ../fixtures/ext_customers.csv
            keys: [id]
