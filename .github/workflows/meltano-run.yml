name: Meltano Run

on:
  pull_request: {}
  push:
    branches: [main]
jobs:
  meltano-run:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - tap: tap-csv
          mapping: hash_email
          output_db: tap_csv.db
          target_table: customers
        - tap: tap-smoke-test
          mapping: whitelist
          output_db: tap_smoke_test.db
          target_table: animals
        - tap: people
          mapping: flatten
          output_db: people.db
          target_table: people
          install_extractor: false
        - tap: nested
          mapping: comprehension
          output_db: nested.db
          target_table: users
          install_extractor: false
        - tap: tap-csv
          mapping: fake
          output_db: tap_csv.db
          target_table: customers
          install_extractor: false
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      id: setup-python
      with:
        python-version: 3.12
        cache: pip
        cache-dependency-path: |
          meltano.yml
          poetry.lock

    - name: Install Meltano
      env:
        PIP_CONSTRAINT: .github/workflows/constraints.txt
      run: |
        pipx install --python '${{ steps.setup-python.outputs.python-path }}' meltano

    - name: Check Meltano version
      run: |
        meltano --version

    - name: Install Mapper
      run: |
        meltano install mapper meltano-map-transformer

    - name: Install Extractor
      if: matrix.install_extractor != 'false'
      run: |
        meltano install extractor ${{ matrix.tap }}

    - name: Install Loader
      run: |
        meltano install loader target-sqlite

    - name: Run
      run: |
        meltano run ${{ matrix.tap }} ${{ matrix.mapping }} target-sqlite

    - name: Check output
      run: |
        sqlite3 -markdown output/${{ matrix.output_db }} 'select * from ${{ matrix.target_table }} limit 20' >> $GITHUB_STEP_SUMMARY
